---
title: exploratory analysis script"
date: "2024-02-07"
output: html_document
---

  

# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) 
library(dplyr)
library(skimr)
library(ggplot2)
```


Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","processeddata.rds")
#load data
mydata <- readRDS(data_location)
```


# Data exploration through tables

Showing a bit of code to produce and save a summary table.


```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results", "tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```


# Data exploration through figures

#Making a table for the clinical variable 
```{r}
table(processeddata$clinical)
```
#doing the same for food
```{r}
table(processeddata$food)
```
#Now lets visualize these tables using bar graphs
```{r}
ggplot(mydata, aes(x = clinical)) + 
  geom_bar(fill = "steelblue") + 
  labs(title = "Yes/No Distribution", x = "Response", y = "Count") + 
  theme_minimal()

```
```{r}
library(ggplot2)

ggplot(mydata, aes(x = food)) + 
  geom_bar(fill = "orange") + 
  labs(title = "Yes/No Distribution", x = "Response", y = "Count") + 
  theme_minimal()

```
#cross tabulation
```{r}
table(mydata$food, mydata$clinical)
```
#We can also look at some distribution across the country since we have some state data
```{r}

mydata %>%
  filter(food == "Yes") %>%  # Keep only "Yes" cases
  count(Location) %>%  # Count occurrences per location
  ggplot(aes(x = Location, y = n)) +
  geom_bar(stat = "identity", fill = "steelblue") + 
  labs(title = "Count of food isolated listeria Cases Across Locations", 
       x = "Location", 
       y = "Count of Yes") + 
  theme_minimal() +
  theme(axis.text.x = element_text(size = 6,angle = 45, hjust = 1))  # Rotate x-axis labels for readability

```
#The left most bar is USA as a whole as some entries do not report the specific state they are from, the rest are states and territories. We see that NY has more cases than other states

#Some entries show the isolation source so lets make a boxplot showing the sources for some clinical isolates.
```{r}
library(ggplot2)
library(dplyr)

mydata %>%
  dplyr::filter(clinical == "Yes") %>%  
  count(`Isolation source`) %>%
  ggplot(aes(x = `Isolation source`, y = n)) +
  geom_boxplot(fill = "darkblue") +
  labs(title = "Count of Clinical 'Yes' Across Isolation Sources", 
       x = "Isolation Source", 
       y = "Count of Yes") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 4, angle = 45, hjust = 1))


#We see there are a ton of sources so we I will filter it to the top 10.
```



```{r}
mydata %>% 
  dplyr::filter(clinical == "Yes") %>%
  count(`Isolation source`) %>%
  top_n(10, n) %>%  # Keep only the top 10 sources
  ggplot(aes(x = reorder(`Isolation source`, -n), y = n)) +
  geom_bar(stat = "identity", fill = "darkblue") +
  labs(title = "Top 10 Clinical 'Yes' Isolation Sources", 
       x = "Isolation Source", 
       y = "Count of Yes") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))

```
#Not sure how pork ended up in the clinical category...
## Now I will try the same thing on food products

```{r}
mydata %>% 
  dplyr::filter(food == "Yes") %>%
  count(`Isolation source`) %>%
  top_n(10, n) %>%  # Keep only the top 10 sources
  ggplot(aes(x = reorder(`Isolation source`, -n), y = n)) +
  geom_bar(stat = "identity", fill = "darkblue") +
  labs(title = "Top 10 Food 'Yes' Isolation Sources", 
       x = "Isolation Source", 
       y = "Count of Yes") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
```
#We see here that the most food isolates for listeria monocytogenes are found in Ready To Eat products, that is a term used by Food Safety and Inspection Service to describe any food products that do not require cooking or sterilization to safely consume.



